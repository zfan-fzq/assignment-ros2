<?xml version="1.0" ?>
<robot name="turtlebot3_waffle_pi" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- 定义颜色材质 -->
  <material name="black"><color rgba="0.0 0.0 0.0 1.0"/></material>
  <material name="dark"><color rgba="0.3 0.3 0.3 1.0"/></material>
  <material name="light_black"><color rgba="0.4 0.4 0.4 1.0"/></material>
  <material name="blue"><color rgba="0.0 0.0 0.8 1.0"/></material>
  <material name="green"><color rgba="0.0 0.8 0.0 1.0"/></material>
  <material name="grey"><color rgba="0.5 0.5 0.5 1.0"/></material>
  <material name="orange"><color rgba="1.0 0.4235 0.0392 1.0"/></material>
  <material name="brown"><color rgba="0.8706 0.8118 0.7647 1.0"/></material>
  <material name="red"><color rgba="0.8 0.0 0.0 1.0"/></material>
  <material name="white"><color rgba="1.0 1.0 1.0 1.0"/></material>

  <!-- 定义关键参数 -->
  <xacro:property name="wheel_radius" value="0.033"/>
  <xacro:property name="wheel_width" value="0.018"/>
  <xacro:property name="wheel_y_offset" value="0.144"/>
  <xacro:property name="wheel_y_offset_neg" value="-0.144"/>
  <xacro:property name="wheel_z_offset" value="0.023"/>
  <xacro:property name="wheel_mass" value="2.8498940e-02"/>
  <xacro:property name="wheel_ixx" value="1.1175580e-05"/>
  <xacro:property name="wheel_ixy" value="-4.2369783e-11"/>
  <xacro:property name="wheel_ixz" value="-5.9381719e-09"/>
  <xacro:property name="wheel_iyy" value="1.1192413e-05"/>
  <xacro:property name="wheel_iyz" value="-1.4400107e-11"/>
  <xacro:property name="wheel_izz" value="2.0712558e-05"/>

  <xacro:property name="caster_x_offset" value="-0.177"/>
  <xacro:property name="caster_y_offset" value="0.064"/>
  <xacro:property name="caster_y_offset_neg" value="-0.064"/>
  <xacro:property name="caster_z_offset" value="-0.004"/>
  <xacro:property name="caster_box_length" value="0.030"/>
  <xacro:property name="caster_box_width" value="0.009"/>
  <xacro:property name="caster_box_height" value="0.020"/>
  <xacro:property name="caster_mass" value="0.005"/>
  <xacro:property name="caster_ixx" value="0.001"/>
  <xacro:property name="caster_ixy" value="0.0"/>
  <xacro:property name="caster_ixz" value="0.0"/>
  <xacro:property name="caster_iyy" value="0.001"/>
  <xacro:property name="caster_iyz" value="0.0"/>
  <xacro:property name="caster_izz" value="0.001"/>

  <xacro:property name="lidar_offset_x" value="-0.064"/>
  <xacro:property name="lidar_offset_z" value="0.122"/>
  <xacro:property name="lidar_radius" value="0.055"/>
  <xacro:property name="lidar_height" value="0.0315"/>
  <xacro:property name="lidar_mass" value="0.114"/>

  <xacro:property name="camera_offset_x" value="0.073"/>
  <xacro:property name="camera_offset_y" value="-0.011"/>
  <xacro:property name="camera_offset_z" value="0.084"/>
  <xacro:property name="camera_box_x" value="0.015"/>
  <xacro:property name="camera_box_y" value="0.030"/>
  <xacro:property name="camera_box_z" value="0.027"/>
  <xacro:property name="camera_rgb_offset_x" value="0.003"/>
  <xacro:property name="camera_rgb_offset_y" value="0.011"/>
  <xacro:property name="camera_rgb_offset_z" value="0.009"/>

  <!-- base_footprint：定义机器人与地面的参考坐标 -->
  <link name="base_footprint"/>

  <joint name="base_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link"/>
    <origin xyz="0 0 0.010" rpy="0 0 0"/>
  </joint>

  <!-- 机器人底盘 -->
  <link name="base_link">
    <!-- 外观：使用底盘 mesh 文件 -->
    <visual>
      <origin xyz="-0.064 0 0.0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://turtlebot3_description/meshes/bases/waffle_pi_base.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="light_black"/>
    </visual>
    <!-- 碰撞模型：采用盒子简化 -->
    <collision>
      <origin xyz="-0.064 0 0.047" rpy="0 0 0"/>
      <geometry>
        <box size="0.266 0.266 0.094"/>
      </geometry>
    </collision>
    <!-- 惯性参数 -->
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="1.3729096e+00"/>
      <inertia ixx="8.7002718e-03" ixy="-4.7576583e-05" ixz="1.1160499e-04" iyy="8.6195418e-03" iyz="-3.5422299e-06" izz="1.4612727e-02"/>
    </inertial>
  </link>

  <!-- 定义轮子组件的宏 -->
  <xacro:macro name="wheel_assembly" params="wheel_name wheel_mesh y_offset">
    <joint name="${wheel_name}_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${wheel_name}_link"/>
      <origin xyz="0.0 ${y_offset} ${wheel_z_offset}" rpy="-1.57 0 0"/>
      <axis xyz="0 0 1"/>
    </joint>
    <link name="${wheel_name}_link">
      <visual>
        <origin xyz="0 0 0" rpy="1.57 0 0"/>
        <geometry>
          <mesh filename="package://turtlebot3_description/meshes/wheels/${wheel_mesh}.stl" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="dark"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
        </geometry>
      </collision>
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="${wheel_mass}"/>
        <inertia ixx="${wheel_ixx}" ixy="${wheel_ixy}" ixz="${wheel_ixz}" iyy="${wheel_iyy}" iyz="${wheel_iyz}" izz="${wheel_izz}"/>
      </inertial>
    </link>
  </xacro:macro>

  <!-- 使用宏生成左右驱动轮 -->
  <xacro:wheel_assembly wheel_name="wheel_left"  wheel_mesh="left_tire"  y_offset="${wheel_y_offset}"/>
  <xacro:wheel_assembly wheel_name="wheel_right" wheel_mesh="right_tire" y_offset="${wheel_y_offset_neg}"/>

  <!-- 定义后置万向轮组件的宏 -->
  <xacro:macro name="caster_assembly" params="caster_name x_off y_off z_off">
    <joint name="${caster_name}_joint" type="fixed">
      <parent link="base_link"/>
      <child link="${caster_name}_link"/>
      <origin xyz="${x_off} ${y_off} ${z_off}" rpy="-1.57 0 0"/>
    </joint>
    <link name="${caster_name}_link">
      <collision>
        <origin xyz="0 0.001 0" rpy="0 0 0"/>
        <geometry>
          <box size="${caster_box_length} ${caster_box_width} ${caster_box_height}"/>
        </geometry>
      </collision>
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="${caster_mass}"/>
        <inertia ixx="${caster_ixx}" ixy="${caster_ixy}" ixz="${caster_ixz}" iyy="${caster_iyy}" iyz="${caster_iyz}" izz="${caster_izz}"/>
      </inertial>
    </link>
  </xacro:macro>

  <!-- 生成后置左右万向轮 -->
  <xacro:caster_assembly caster_name="caster_back_right" x_off="${caster_x_offset}" y_off="${caster_y_offset_neg}" z_off="${caster_z_offset}"/>
  <xacro:caster_assembly caster_name="caster_back_left"  x_off="${caster_x_offset}" y_off="${caster_y_offset}"  z_off="${caster_z_offset}"/>

  <!-- IMU 传感器：仅作为参考坐标系 -->
  <joint name="imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin xyz="0.0 0.0 0.068" rpy="0 0 0"/>
  </joint>
  <link name="imu_link"/>

  <!-- 2D 激光雷达（base_scan） -->
  <joint name="scan_joint" type="fixed">
    <parent link="base_link"/>
    <child link="base_scan"/>
    <origin xyz="${lidar_offset_x} 0.0 ${lidar_offset_z}" rpy="0 0 0"/>
  </joint>
  <link name="base_scan">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://turtlebot3_description/meshes/sensors/lds.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="dark"/>
    </visual>
    <collision>
      <origin xyz="0.015 0 -0.0065" rpy="0 0 0"/>
      <geometry>
        <cylinder length="${lidar_height}" radius="${lidar_radius}"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="${lidar_mass}"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>

  <!-- 摄像头传感器（Raspberry Pi 摄像头模块） -->
  <joint name="camera_joint" type="fixed">
    <parent link="base_link"/>
    <child link="camera_link"/>
    <origin xyz="${camera_offset_x} ${camera_offset_y} ${camera_offset_z}" rpy="0 0 0"/>
  </joint>
  <link name="camera_link">
    <!-- 摄像头碰撞模型 -->
    <collision>
      <origin xyz="0.005 0.011 0.013" rpy="0 0 0"/>
      <geometry>
        <box size="${camera_box_x} ${camera_box_y} ${camera_box_z}"/>
      </geometry>
    </collision>
    <!-- 可选：添加视觉模型 -->
    <visual>
      <origin xyz="0.005 0.011 0.013" rpy="0 0 0"/>
      <geometry>
        <box size="${camera_box_x} ${camera_box_y} ${camera_box_z}"/>
      </geometry>
      <material name="black"/>
    </visual>
  </link>
  
  <!-- 摄像头光学框架 -->
  <joint name="camera_rgb_joint" type="fixed">
    <parent link="camera_link"/>
    <child link="camera_rgb_frame"/>
    <origin xyz="${camera_rgb_offset_x} ${camera_rgb_offset_y} ${camera_rgb_offset_z}" rpy="0 0 0"/>
  </joint>
  <link name="camera_rgb_frame"/>

  <!-- 摄像头光学坐标框架 -->
  <joint name="camera_rgb_optical_joint" type="fixed">
    <parent link="camera_rgb_frame"/>
    <child link="camera_rgb_optical_frame"/>
    <origin xyz="0 0 0" rpy="-1.57 0 -1.57"/>
  </joint>
  <link name="camera_rgb_optical_frame">
    <!-- 添加 Gazebo 摄像头插件 -->
    <gazebo reference="camera_rgb_optical_frame">
      <plugin name="gazebo_ros_camera" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <cameraName>turtlebot3_camera</cameraName>
        <imageTopicName>camera/image_raw</imageTopicName>
        <cameraInfoTopicName>camera/camera_info</cameraInfoTopicName>
        <frameName>camera_rgb_optical_frame</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <CxPrime>0.0</CxPrime>
        <focalLengthX>320.0</focalLengthX>
        <focalLengthY>320.0</focalLengthY>
      </plugin>
    </gazebo>
  </link>

</robot>
